<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Text" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ include file="CommonFunctions.cs.t4" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a T4 template using Scaffolder PocoFromDB
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//	Generated by: <#= Model.User #>
//	   Date Created: <#= DateTime.Today.ToString("yyyy-MM-dd") #>
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.ModelConfiguration;
using <#= Model.Namespace #>.Models;

namespace <#= Model.Namespace #>.Mappings
{ 
<# 
	var primaryKeys = Model.TableSchema.PrimaryKey;
#>	
	public class <#= Model.ClassName #>Config : EntityTypeConfiguration<<#= Model.ClassName #>>
    {
		public <#=Model.ClassName #>Config()
		{
			ToTable("<#= (new Regex(@"[\[\]`]")).Replace(Model.TableName.ToUpper(), "")  #>");
<#foreach(DataColumn col in Model.TableSchema.Columns){ 
var propName = PropertyNameRules(col.ColumnName, Model.ClassName); #>
			Property(a => a.<#= propName #>).HasColumnName("<#=col.ColumnName#>");
<#}#>

<# if (primaryKeys != null && primaryKeys.Length > 0) { #>
			HasKey(a => new { <# for(var i = 0; i <  primaryKeys.Length ; i++){ var c = primaryKeys[i];#><#= i > 0 ? ", " : "" #>a.<#= PropertyNameRules(c.ColumnName) #><#}#> });
<# } #>
		}	
	}
}

